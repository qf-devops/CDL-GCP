1. create compute engine with init script:
  init script:
  sudo su
  apt update
  apt -y install apache2
  sudo systemmctl start apache2
  sudo systemctl enable apache2
  echo "Hello World" > /var/www/html/index.html

in mmanagemenbt section >> automation

2. create one instance template and launch compute engine with instance template
   install docker:
     >apt install docker.io
     
   run docker run command to sgtart container:
     >docker run -itd -p 81:80 ubuntu/apache2
     
     docker stop 297850facf0f
     
     docker run -itd -p 81:80 --name n1 nginx
3. cretae 2nd vm
    demo1:
       docker sdwarm init
     demo2:
       docker swarm join (which generated in demo1 instance)
       
    demo1:
       docker node ls
       docker service create --name=n1 -p 81:80 nginx
       docker service ps n1
       dcoekr service scale n1=3
       docker service ps n1
       
4.
   clone:
     git clone https://github.com/qfitsolutions/docker.git
       cd docker
       docker stack deploy  -c stack-dc.yml mystack
       docker stack ps mystack
       docker stack services mystack
        
 5. Cloud run:
https://cloud.google.com/run/docs/quickstarts/build-and-deploy/deploy-python-service?hl=en_US

6. create gke cluster
   install kubectl command in your terminal or vm :  https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/
   get gke cluster credentials ==> kubeconfig
   kubectl run n1 --image=nginx --port=80
   kubectl get pod
   kubectl expose pod n1 --port=80 --target-port=80 --name=n1s --type=LoadBalancer
   kubectl get svc
   access the url from browser: http://34.69.14.17/
   
 7. kubernetyes dashboard:
     https://github.com/kubernetes/dashboard
   


